syntax = "proto3";

package Protocol;
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Google.Protobuf.Protocol";

enum MsgId {
  S_ENTER_GAME = 0;
  S_LEAVE_GAME = 1;
  S_SPAWN = 2;
  S_DESPAWN = 3;
  C_MOVE = 4;
  S_MOVE = 5;
  C_SKILL = 6;
  S_SKILL = 7;
  S_CHANGE_HP = 8;
  S_DIE = 9;
  S_CONNECTED = 10;
  C_LOGIN = 11;
  S_LOGIN = 12;
  C_ENTER_GAME = 13;
  C_CREATE_PLAYER = 14;
  S_CREATE_PLAYER = 15;
  S_ITEM_LIST = 16;
  S_ADD_ITEM = 17;
  C_EQUIP_ITEM =18;
  S_EQUIP_ITEM = 19;
  S_CHANGE_STAT = 20;
  S_PING = 21;
  C_PONG = 22;
  C_TELEPORT = 23;
  S_TELEPORT = 24;
  S_CHANGE_ITEM = 25;
  C_CHANGE_ITEM = 26;
  S_RES_MARKET_LIST = 27;
  C_REQ_MARKET_LIST = 28;
  S_MARKET_ITEM_RESISTER = 29;
  C_MARKET_ITEM_RESISTER = 30;
  S_MARKET_ITEM_PURCHASE = 31;
  C_MARKET_ITEM_PURCHASE = 32;
  S_MAIL_ITEM_LIST = 33;
  C_MAIL_ITEM_LIST = 34;
  S_MAIL_ITEM_RECEIVE = 35;
  C_MAIL_ITEM_RECEIVE = 36;
  C_MARKET_ITEM_SEARCH = 37;
  C_CHAT = 38;
  S_CHAT = 39;
  S_CHAT_SPAWN = 40;
  S_CHAT_DESPAWN =41;
  S_SPAWN_DAMAGE = 42;
  S_GOLD_CHANGE = 43;
  S_EXP_CHANGE = 44;
  C_EXIT_GAME = 45;
  S_EXIT_GAME = 46;
  S_MARKET_ITEM_DELETE = 47;
  C_MARKET_ITEM_DELETE = 48;
  S_ITEM_SLOT_CHANGE = 49;
  C_ITEM_SLOT_CHANGE = 50;
  C_ITEM_DELETE = 51;
}

enum CreatureState {
  IDLE = 0;
  MOVING = 1;
  SKILL = 2;
  DEAD = 3;
}

enum MoveDir {
  UP = 0;
  DOWN = 1;
  LEFT = 2;
  RIGHT = 3;
}

enum GameObjectType {
  NONE = 0;
  PLAYER = 1;
  MONSTER = 2;
  PROJECTILE = 3;
  CHAT = 4;
  BOSS_MONSTER = 5;
}

enum SkillType {
  SKILL_NONE = 0;
  SKILL_AUTO = 1;
  SKILL_PROJECTILE = 2;
}

enum PlayerServerState {
  SERVER_STATE_LOGIN = 0;
  SERVER_STATE_LOBBY = 1;
  SERVER_STATE_GAME = 2;
}

enum ItemType {
  ITEM_TYPE_NONE = 0;
  ITEM_TYPE_WEAPON = 1;
  ITEM_TYPE_ARMOR = 2;
  ITEM_TYPE_CONSUMABLE = 3;
}

enum WeaponType {
  WEAPON_TYPE_NONE = 0;
  WEAPON_TYPE_SWORD = 1;
  WEAPON_TYPE_BOW = 2;
}

enum ArmorType {
  ARMOR_TYPE_NONE = 0;
  ARMOR_TYPE_HELMET = 1;
  ARMOR_TYPE_ARMOR = 2;
  ARMOR_TYPE_BOOTS = 3;
}

enum ConsumableType {
   CONSUMABLE_TYPE_NONE = 0;
   CONSUMABLE_TYPE_POTION = 1;
}


message S_EnterGame {
  ObjectInfo player = 1;
}

message S_LeaveGame {
}

message S_Spawn {
  repeated ObjectInfo objects = 1;
}

message S_Despawn {
  repeated int32 objectIds = 1;
}

message C_Move {
  PositionInfo posInfo = 1;
}

message S_Move {
  int32 objectId = 1;
  PositionInfo posInfo = 2;
}

message C_Skill {
  SkillInfo info = 1;
}

message S_Skill {
  int32 objectId = 1;
  SkillInfo info = 2;
}

message S_ChangeHp {
  int32 objectId = 1;
  int32 hp = 2;
}
message S_SpawnDamage
{
	int32 hitObjectId=1;
	int32 damage=2;
}

message S_Die {
  int32 objectId = 1;
  int32 attackerId = 2;
}

message S_Connected {
}

message C_Login {
  string uniqueId = 1;
}

message S_Login {
  int32 loginOk = 1;
  repeated LobbyPlayerInfo players = 2;
}

message C_CreatePlayer {
  string name = 1;
}

message S_CreatePlayer {
  LobbyPlayerInfo player = 1;
}

message C_EnterGame {
  string name = 1;
}

message S_ItemList {
  repeated ItemInfo items = 1;
}

message S_AddItem {
  repeated ItemInfo items = 1;
}

message C_EquipItem
{
	int32 itemDbId =1;
	bool equipped =2;
}

message S_EquipItem
{
	int32 itemDbId =1;
	bool equipped =2;
}

message S_ChangeStat
{
	StatInfo statInfo =1;
}

message S_Ping
{

}
message C_Pong
{

}

message C_Teleport
{
}

message S_Teleport
{
	int32 mapId=1;
}

message C_ChangeItem
{

}
message S_ChangeItem
{

}
message S_ResMarketList
{
	repeated MarketItem marketItems =1;
}
message C_ReqMarketList
{

}
message S_MarketItemResister
{
	bool itemResisterOk = 1;
}
message C_MarketItemResister
{
	int32 itemDbId = 1;
	int32 sellerId = 2;
	int32 templateId = 3;
	int32 price =4;
	string itemName =5;
}
message C_MarketItemSearch
{
	string name = 1;
}

message S_MarketItemPurchase
{
	bool itemPurchaseOk =1;
}
message C_MarketItemPurchase
{
	int32 itemDbId = 1;
	int32 buyerId = 2;
	int32 templateId = 3;
	int32 sellerId = 4;
	int32 price = 5;
}

message C_MarketItemDelete
{
	MarketItem item = 1;
}

message S_MarketItemDelete
{
	bool deleteOk =1;
}

message C_MailItemList
{

}

message S_MailItemList
{
	repeated MailItem MailItems =1;
}

message C_MailItemReceive
{
	MailItem mailItem = 1;
}
message S_MailItemReceive
{
	bool mailItemReceiveOk = 1;
}

message C_Chat
{
	string message =1;
}
message S_Chat
{
	ChatInfo chatInfo =1;
}

message S_ChatSpawn
{
	int32 chatId = 1;
	int32 senderId = 2;
	ChatInfo chatInfo = 3;
}
message S_ChatDespawn
{
	int32 chatId = 1;
	int32 senderId = 2;
}
message S_GoldChange
{
	int32 gold =1;
}
message S_ExpChange
{
	StatInfo stat =1;
}
message C_ExitGame
{
	bool exit = 1;
}
message S_ExitGame
{
	bool exit = 1;
}

message C_ItemSlotChange
{
	int32 selectedItemDbId = 1;
	int32 selectedSlot = 2;
	int32 targetItemDbId = 3;
	int32 targetSlot = 4;
}

message S_ItemSlotChange
{
	bool changeOk =1;
}

message C_ItemDelete
{
	int32 itemDbId =1;
}

message ChatInfo
{
	string chat =1;
	string playerName=2;
}

message LobbyPlayerInfo {
  int32 playerDbId = 1;
  string name = 2;
  StatInfo statInfo = 3;
  int32 gold=4;
}

message ObjectInfo {
  int32 objectId = 1;
  string name = 2;
  PositionInfo posInfo = 3;
  StatInfo statInfo = 4;
}

message PositionInfo {
  CreatureState state = 1;
  MoveDir moveDir = 2;
  int32 posX = 3;
  int32 posY = 4;
  int32 tileInfo = 5;
}

message StatInfo {
  int32 level = 1;
  int32 hp = 2;
  int32 maxHp = 3;
  int32 attack = 4;
  float speed = 5;
  int32 totalExp = 6;
  int32 currentExp = 7;
}

message SkillInfo {
  int32 skillId = 1;
}

message ItemInfo {
  int32 itemDbId = 1;
  int32 templateId = 2;
  int32 count = 3;
  int32 slot = 4;
  bool equipped = 5;
}

message MarketItem
{
	int32 itemDbId=1;
	int32 templateId=2;
	int32 sellerId=3;
	int32 price = 4;
	string sellerName=5;
}

message MailItem
{
	int32 itemDbId=1;
	int32 templateId=2;
	int32 sellerId=3;
	int32 price = 4;
	string sellerName=5;
}

message StatusCode
{
	int32 statusCode =1;
}